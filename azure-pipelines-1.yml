# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool: "default"

variables:
  - name: resourceGroupName
    value: 'Guro'
  - name: rgLocation
    value: 'Canada Central'
    # Project folder name for the Infrastructure
  - name: AzureAppInfrastructure
    value: 'InfrastructureBlob'
    # Project folder name for the Azure Function
  - name: AzureAppFunction
    value: 'BlobFunction'
    # Name of the Infrastructure Resource (Blob)
  - name: AzureBlob
    value: 'blobfunctionguro'
  - name: AzureBlobContainerName
    value: 'blob'
  - name: AzureFunctionAppName
    value: 'GuroFunctionApp'
  - name: BlobString
    value: 'patate'

resources:
  pipelines:
    - pipeline: 'AzureFunctionApp'
      source: 'AzureFunctionApp'
      project: 'AzureFunctionApp'
      trigger: true

stages:
- stage: Infra
  displayName: Infrastructure Deployment
  jobs:
  - job: Deploy
    displayName: Infrastructure Deployment
    steps:
    - task: AzureResourceManagerTemplateDeployment@3
      displayName: ARM Template Deployment
      name: ARMdeploy
      inputs:
        deploymentScope: 'Resource Group'
        azureResourceManagerConnection: 'Azure subscription 1(970fcef5-9c23-4f7d-a11b-5a96d104f066)'
        subscriptionId: '970fcef5-9c23-4f7d-a11b-5a96d104f066'
        action: 'Create Or Update Resource Group'
        resourceGroupName: '$(resourceGroupName)'
        location: '$(rgLocation)'
        templateLocation: 'Linked artifact'
        csmFile: '$(Build.SourcesDirectory)\$(AzureAppInfrastructure)\azuredeploy.json'
        csmParametersFile: '$(Build.SourcesDirectory)\$(AzureAppInfrastructure)\azuredeploy.parameters.json'
        overrideParameters: '-storageAccountName $(AzureBlob) -storageBlobContainerName $(AzureBlobContainerName)'
        deploymentMode: 'Incremental'
        deploymentOutputs: 'Deployment1'
        
    - script: |
        echo ##vso[task.setvariable variable=BlobString;isOutput=true;isSecure=true]$(Deployment1.blobstoragestring.value)
      name: AssignKey

- stage: Function
  displayName: Function Deployment

  jobs:
  - job: FunctionBuild
    displayName: Function Build

    steps:
    - task: DotNetCoreCLI@2
      displayName: Restore Project
      inputs:
        command: 'restore'
        projects: '$(Build.SourcesDirectory)/$(AzureAppFunction)/*.csproj'
        
    - task: DotNetCoreCLI@2
      displayName: Build Azure Function
      inputs:
        command: 'build'
        projects: '$(Build.SourcesDirectory)/$(AzureAppFunction)/*.csproj'
        arguments: '--configuration Release --output $(Build.BinariesDirectory)'

    - task: DotNetCoreCLI@2
      displayName: Publish Azure Function
      inputs:
        command: 'publish'
        projects: '$(Build.SourcesDirectory)/$(AzureAppFunction)/*.csproj'
        arguments: '--configuration Release --output $(Build.ArtifactStagingDirectory)'
        publishWebProjects: false
        zipAfterPublish: true
        modifyOutputPath: false
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

  - job: FunctionDeploy
    displayName: Function Deployment
    dependsOn: FunctionBuild

    variables: 
      blobstring: $[ stageDependencies.Infra.Deploy.outputs['AssignKey.BlobString'] ]

    steps:
    - checkout: none
    - task: DownloadBuildArtifacts@1
      inputs:
        buildType: 'current'
        downloadType: 'single'
        artifactName: 'drop'
        downloadPath: '$(System.ArtifactsDirectory)'
        cleanDestinationFolder: true

    - task: AzureFunctionApp@2
      inputs:
        connectedServiceNameARM: 'Azure subscription 1(970fcef5-9c23-4f7d-a11b-5a96d104f066)'
        appType: 'functionApp'
        appName: '$(AzureFunctionAppName)'
        deployToSlotOrASE: true
        resourceGroupName: '$(resourceGroupName)'
        slotName: 'production'
        package: '$(Build.ArtifactStagingDirectory)/**/*.zip'
        deploymentMethod: 'runFromPackage'
        appSettings: '-Blob_ConnectionString $(blobstring) -Blob_ConnectionString__blob "https://$(AzureBlob).blob.core.windows.net/"'