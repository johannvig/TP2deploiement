trigger:
  - main

pool: 'default'

variables:
  AzureAppFunction: 'AzureResourceTP2/FunctionApp/Function' # Dossier contenant le projet Azure Function
  AzureFunctionAppName: 'TP2GuroFunction' # Nom de la Function App sur Azure
  StorageAccountName: 'tp2storageaccount' # Nom du compte de stockage

stages:
  - stage: DeployInfrastructure
    displayName: 'Deploy Infrastructure'
    jobs:
      - job: DeployInfrastructure
        displayName: 'ARM Deployment'
        steps:
          - task: AzureCLI@2
            displayName: 'Create Resource Group'
            inputs:
              azureSubscription: 'Azure subscription 1(2)(4752c137-48fe-4a21-ac6e-435c1d51dbe9)'
              scriptType: 'batch'
              scriptLocation: 'inlineScript'
              inlineScript: |
                az group create ^
                  --name DefaultResourceGroup-CCAN ^
                  --location "East US"

          - task: AzureCLI@2
            displayName: 'Create Storage Account'
            inputs:
              azureSubscription: 'Azure subscription 1(2)(4752c137-48fe-4a21-ac6e-435c1d51dbe9)'
              scriptType: 'batch'
              scriptLocation: 'inlineScript'
              inlineScript: |
                az storage account create ^
                  --name $(StorageAccountName) ^
                  --resource-group tp2SC ^
                  --location "East US" ^
                  --sku Standard_LRS

          - task: AzureCLI@2
            displayName: 'Create Log Analytics Workspace'
            inputs:
              azureSubscription: 'Azure subscription 1(2)(4752c137-48fe-4a21-ac6e-435c1d51dbe9)'
              scriptType: 'batch'
              scriptLocation: 'inlineScript'
              inlineScript: |
                az monitor log-analytics workspace create ^
                  --resource-group DefaultResourceGroup-CCAN ^
                  --workspace-name DefaultWorkspace-4752c137-48fe-4a21-ac6e-435c1d51dbe9-CCAN ^
                  --location "East US"

          - task: AzureCLI@2
            displayName: 'Create Function App'
            inputs:
              azureSubscription: 'Azure subscription 1(2)(4752c137-48fe-4a21-ac6e-435c1d51dbe9)'
              scriptType: 'batch'
              scriptLocation: 'inlineScript'
              inlineScript: |
                az functionapp show --name $(AzureFunctionAppName) --resource-group tp2SC || ^
                az functionapp create ^
                  --resource-group tp2SC ^
                  --consumption-plan-location "East US" ^
                  --runtime dotnet ^
                  --runtime-version 7.0 ^
                  --functions-version 4 ^
                  --name $(AzureFunctionAppName) ^
                  --storage-account $(StorageAccountName)

          - task: AzureResourceManagerTemplateDeployment@3
            displayName: 'Deploy ARM Template'
            inputs:
              deploymentScope: 'Resource Group'
              azureResourceManagerConnection: 'Azure subscription 1(2)(4752c137-48fe-4a21-ac6e-435c1d51dbe9)'
              subscriptionId: '4752c137-48fe-4a21-ac6e-435c1d51dbe9'
              action: 'Create Or Update Resource Group'
              resourceGroupName: 'tp2SC'
              location: 'East US'
              templateLocation: 'Linked artifact'
              csmFile: '$(Build.SourcesDirectory)\AzureResourceTP2\azuredeploy.json'
              csmParametersFile: '$(Build.SourcesDirectory)\AzureResourceTP2\azuredeploy.parameters.json'
              deploymentMode: 'Incremental'

  - stage: Function
    displayName: 'Function Deployment'
    dependsOn: DeployInfrastructure
    jobs:
      - job: FunctionBuild
        displayName: 'Function Build'
        steps:
          - task: DotNetCoreCLI@2
            displayName: 'Restore Project'
            inputs:
              command: 'restore'
              projects: '$(Build.SourcesDirectory)/$(AzureAppFunction)/*.csproj'

          - task: DotNetCoreCLI@2
            displayName: 'Build Azure Function'
            inputs:
              command: 'build'
              projects: '$(Build.SourcesDirectory)/$(AzureAppFunction)/*.csproj'
              arguments: '--configuration Release --output $(Build.BinariesDirectory)'

          - task: DotNetCoreCLI@2
            displayName: 'Publish Azure Function'
            inputs:
              command: 'publish'
              projects: '$(Build.SourcesDirectory)/$(AzureAppFunction)/*.csproj'
              arguments: '--configuration Release --output $(Build.ArtifactStagingDirectory)'
              publishWebProjects: false
              zipAfterPublish: true
              modifyOutputPath: false

          - task: PublishBuildArtifacts@1
            displayName: 'Publish Build Artifacts'
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)'
              ArtifactName: 'drop'
              publishLocation: 'Container'

      - job: FunctionDeploy
        displayName: 'Function Deployment'
        dependsOn: FunctionBuild
        steps:
          - checkout: none
          - task: DownloadBuildArtifacts@1
            displayName: 'Download Build Artifacts'
            inputs:
              buildType: 'current'
              artifactName: 'drop'
              downloadPath: '$(System.ArtifactsDirectory)'

          - task: AzureFunctionApp@2
            displayName: 'Deploy Function to Azure'
            inputs:
              connectedServiceNameARM: 'Azure subscription 1(2)(4752c137-48fe-4a21-ac6e-435c1d51dbe9)'
              appType: 'functionApp'
              appName: '$(AzureFunctionAppName)'
              deployToSlotOrASE: true
              resourceGroupName: 'tp2SC'
              slotName: 'production'
              package: '$(Build.ArtifactStagingDirectory)/**/*.zip'
              deploymentMethod: 'runFromPackage'
